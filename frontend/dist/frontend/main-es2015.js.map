{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-classes/add-classes.component.ts","./src/app/components/add-classes/add-classes.component.html","./src/app/components/add-classes/classes.validator.ts","./src/app/components/add-student/add-student.component.ts","./src/app/components/add-student/add-student.component.html","./src/app/components/classes-details/classes-details.component.ts","./src/app/components/classes-details/classes-details.component.html","./src/app/components/classes-details/classes.validator.ts","./src/app/components/classes-list/classes-list.component.ts","./src/app/components/classes-list/classes-list.component.html","./src/app/components/student-details/student-details.component.ts","./src/app/components/student-details/student-details.component.html","./src/app/components/students-list/students-list.component.ts","./src/app/components/students-list/students-list.component.html","./src/app/services/classes.service.ts","./src/app/services/student.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ClassesListComponent } from './components/classes-list/classes-list.component';\r\nimport { ClassesDetailsComponent } from './components/classes-details/classes-details.component';\r\nimport { AddClassesComponent } from './components/add-classes/add-classes.component';\r\nimport { StudentsListComponent } from './components/students-list/students-list.component';\r\nimport { StudentDetailsComponent } from './components/student-details/student-details.component';\r\nimport { AddStudentComponent } from './components/add-student/add-student.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'classes', redirectTo: 'classes', pathMatch: 'full' },\r\n  { path: 'classes', component: ClassesListComponent },\r\n  { path: 'classes/:id', component: ClassesDetailsComponent },\r\n  { path: 'add', component: AddClassesComponent },\r\n\r\n  { path: 'students', redirectTo: 'students', pathMatch: 'full' },\r\n  { path: 'students', component: StudentsListComponent },\r\n  { path: 'students/:id', component: StudentDetailsComponent },\r\n  { path: 'add', component: AddStudentComponent }\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'TaskOne';\r\n}\r\n","<div>\r\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <a href=\"#\" class=\"navbar-brand\">TASK #1</a>\r\n        <div class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item\">\r\n                <a routerLink=\"classes\" class=\"nav-link\">CLASSES</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a routerLink=\"students\" class=\"nav-link\">STUDENTS</a>\r\n            </li>\r\n        </div>\r\n    </nav>\r\n\r\n    <div class=\"container mt-3\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AddClassesComponent } from './components/add-classes/add-classes.component';\r\nimport { ClassesDetailsComponent } from './components/classes-details/classes-details.component';\r\nimport { ClassesListComponent } from './components/classes-list/classes-list.component';\r\n\r\nimport { AddStudentComponent } from './components/add-student/add-student.component';\r\nimport { StudentDetailsComponent } from './components/student-details/student-details.component';\r\nimport { StudentsListComponent } from './components/students-list/students-list.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddClassesComponent,\r\n    ClassesDetailsComponent,\r\n    ClassesListComponent,\r\n    AddStudentComponent,\r\n    StudentDetailsComponent,\r\n    StudentsListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport { ClassesValidator } from './classes.validator';\r\n\r\nimport { ClassesService } from 'src/app/services/classes.service';\r\n\r\n@Component({\r\n  selector: 'app-add-classes',\r\n  templateUrl: './add-classes.component.html',\r\n  styleUrls: ['./add-classes.component.css'],\r\n})\r\nexport class AddClassesComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n    code: new FormControl('', [Validators.required, ClassesValidator.cannotContainSpace]),\r\n    name: new FormControl('', Validators.required),\r\n    status: new FormControl('', Validators.required),\r\n    max_students: new FormControl('', Validators.required)\r\n    \r\n  });\r\n\r\n\r\n  classes = {\r\n    code: '',\r\n    name: '',\r\n    max_students: '',\r\n    status: '',\r\n    description: '',\r\n  };\r\n  submitted = false;\r\n\r\n  constructor(private classesService: ClassesService) {}\r\n\r\n  get f(){\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit(){\r\n    console.log(this.form.value);\r\n\r\n    this.saveClasses();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n  \r\n\r\n  saveClasses() {\r\n    const data = {\r\n      code: this.classes.code,\r\n      name: this.classes.name,\r\n      max_students: this.classes.max_students,\r\n      status: this.classes.status,\r\n      description: this.classes.description,\r\n    };\r\n\r\n    this.classesService.create(data).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.submitted = true;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  newClasses() {\r\n    this.submitted = false;\r\n    this.classes = {\r\n      code: '',\r\n      name: '',\r\n      max_students: '',\r\n      status: '',\r\n      description: '',\r\n    };\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"saveClasses()\" class=\"submit-form\">\r\n    <div *ngIf=\"!submitted\">\r\n        <div class=\"form-group\">\r\n            <label for=\"code\">Code</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"code\" pattern=\"^\\S+$\" required [(ngModel)]=\"classes.code\" formControlName=\"code\" />\r\n            <div *ngIf=\"f.code.touched && f.code.invalid\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"f.code.errors.required\">code is required.</div>\r\n                <div *ngIf=\"f.code.errors.minlength\">code should be 3 character.</div>\r\n                <div *ngIf=\"f.code.errors.cannotContainSpace\">code can not contain space.</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"name\">Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"classes.name\" formControlName=\"name\" />\r\n            <div *ngIf=\"f.name.touched && f.name.invalid\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"f.name.errors.required\">name is required.</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"max_students\">Max Students</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"max_students\" required [(ngModel)]=\"classes.max_students\" formControlName=\"max_students\" />\r\n            <div *ngIf=\"f.max_students.touched && f.max_students.invalid\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"f.max_students.errors.required\">Maximum Students is required.</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"status\">status</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"status\" required [(ngModel)]=\"classes.status\" formControlName=\"status\" />\r\n            <div *ngIf=\"f.status.touched && f.status.invalid\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"f.status.errors.required\">status is required.</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"description\">Description</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"description\" [(ngModel)]=\"classes.description\" [ngModelOptions]=\"{standalone: true}\" name=\" description \" />\r\n\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-success \" [disabled]=\"!(form.valid)\">Submit</button>\r\n    </div>\r\n\r\n    <div *ngIf=\"submitted \">\r\n        <h4>You submitted successfully!</h4>\r\n        <button class=\"btn btn-success \" (click)=\"newClasses() \">Add</button>\r\n    </div>\r\n</form>","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nexport class ClassesValidator {\r\n    static cannotContainSpace(control: AbstractControl) : ValidationErrors | null {\r\n        if((control.value as string).indexOf(' ') >= 0){\r\n            return {cannotContainSpace: true}\r\n        }\r\n  \r\n        return null;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from 'src/app/services/student.service';\r\n\r\nimport {NgbCalendar, NgbDate, NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-add-student',\r\n  templateUrl: './add-student.component.html',\r\n  styleUrls: ['./add-student.component.css'],\r\n})\r\nexport class AddStudentComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n\r\n  student = {\r\n    first_name: '',\r\n    last_name: '',\r\n    class: '',\r\n    date_of_birth: Date,\r\n  };\r\n  submitted = false;\r\n  constructor(private studentService: StudentService,private calendar: NgbCalendar) {}\r\n  isDisabled = (date: NgbDate, current: {month: number, year: number}) => date.month !== current.month;\r\n  isWeekend = (date: NgbDate) =>  this.calendar.getWeekday(date) >= 6;\r\n\r\n\r\n  ngOnInit(): void {}\r\n\r\n  saveStudent() {\r\n    const data = {\r\n      first_name: this.student.first_name,\r\n      last_name: this.student.last_name,\r\n      class: this.student.class,\r\n      date_of_birth: this.student.date_of_birth,\r\n    };\r\n\r\n    this.studentService.create(data).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.submitted = true;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  newStudent() {\r\n    this.submitted = false;\r\n    this.student = {\r\n      first_name: '',\r\n      last_name: '',\r\n      class: '',\r\n      date_of_birth: Date,\r\n    };\r\n  }\r\n}\r\n","<div class=\"submit-form\">\r\n    <div *ngIf=\"!submitted\">\r\n        <div class=\"form-group\">\r\n            <label for=\"First_Name\">First Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"First_Name\" required [(ngModel)]=\"student.first_name \" name=\"First_Name\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"Last_Name\">Last Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"Last_Name\" required [(ngModel)]=\"student.last_name \" name=\"Last_Name\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"class\">class</label>\r\n            <input class=\"form-control\" id=\"class\" required [(ngModel)]=\"student.class\" name=\"class\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"date_of_birth\">Date of Birth</label>\r\n            <!-- <input class=\"form-control\" id=\"date_of_birth\" required [(ngModel)]=\"student.date_of_birth\" name=\"date_of_birth\" /> -->\r\n            <div class=\"input-group\">\r\n                <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"student.date_of_birth\" ngbDatepicker #d=\"ngbDatepicker\">\r\n                <div class=\"input-group-append\">\r\n                    <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"></button>\r\n                </div>\r\n            </div>\r\n\r\n            <button (click)=\"saveStudent()\" class=\"btn btn-success\">Submit</button>\r\n        </div>\r\n\r\n        <div *ngIf=\"submitted\">\r\n            <h4>You submitted successfully!</h4>\r\n            <button class=\"btn btn-success\" (click)=\"newStudent()\">Add</button>\r\n        </div>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ClassesValidator } from './classes.validator';\r\n\r\nimport { ClassesService } from 'src/app/services/classes.service';\r\n\r\n@Component({\r\n  selector: 'app-classes-details',\r\n  templateUrl: './classes-details.component.html',\r\n  styleUrls: ['./classes-details.component.css'],\r\n})\r\nexport class ClassesDetailsComponent implements OnInit {\r\n  currentClass = null;\r\n  studentsList = null;\r\n  message = '';\r\n\r\n  form = new FormGroup({\r\n    code: new FormControl('', [\r\n      Validators.required,\r\n      ClassesValidator.cannotContainSpace,\r\n    ]),\r\n    name: new FormControl('', Validators.required),\r\n    max_students: new FormControl('', Validators.required)\r\n  });\r\n  constructor(\r\n    private classesService: ClassesService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.message = '';\r\n    this.getClasses(this.route.snapshot.paramMap.get('id'));\r\n  }\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.form.value);\r\n    this.updateClasses();\r\n  }\r\n\r\n  getClasses(id) {\r\n    this.classesService.get(id).subscribe(\r\n      (data) => {\r\n        this.currentClass = data['class'];\r\n        this.studentsList = data['students'];\r\n        console.log('students',data);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  updateStatus(status) {\r\n    const data = {\r\n      code: this.currentClass.code,\r\n      name: this.currentClass.name,\r\n      max_students: this.currentClass.max_students,\r\n      description: this.currentClass.description,\r\n      Status: status,\r\n    };\r\n\r\n    this.classesService.update(this.currentClass.id, data).subscribe(\r\n      (response) => {\r\n        this.currentClass.status = status;\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  updateClasses() {\r\n    this.classesService\r\n      .update(this.currentClass.id, this.currentClass)\r\n      .subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n          this.message = 'The Classes was updated successfully!';\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  deleteClasses() {\r\n    this.classesService.delete(this.currentClass.id).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.router.navigate(['/classes']);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"list row\">\r\n\r\n    <div class=\"col-md-6\">\r\n        <div [formGroup]=\"form\" class=\"submit-form\">\r\n            <div *ngIf=\"currentClass\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"code\">Code</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"code\" pattern=\"^\\S+$\" required [(ngModel)]=\"currentClass.code\" formControlName=\"code\" />\r\n                    <div *ngIf=\"f.code.touched && f.code.invalid\" class=\"alert alert-danger\">\r\n                        <div *ngIf=\"f.code.errors.required\">code is required.</div>\r\n                        <div *ngIf=\"f.code.errors.minlength\">code should be 3 character.</div>\r\n                        <div *ngIf=\"f.code.errors.cannotContainSpace\">code can not contain space.</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"name\">Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"currentClass.name\" formControlName=\"name\" />\r\n                    <div *ngIf=\"f.name.touched && f.name.invalid\" class=\"alert alert-danger\">\r\n                        <div *ngIf=\"f.name.errors.required\">name is required.</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"max_students\">Max Students</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"max_students\" required [(ngModel)]=\"currentClass.max_students\" formControlName=\"max_students\" />\r\n                    <div *ngIf=\"f.max_students.touched && f.max_students.invalid\" class=\"alert alert-danger\">\r\n                        <div *ngIf=\"f.max_students.errors.required\">Maximum Students is required.</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"description\">Description</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"description\" [(ngModel)]=\"currentClass.description\" [ngModelOptions]=\"{standalone: true}\" name=\" description \" />\r\n\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label><strong>Status:</strong></label> {{ currentClass.status == 0 ? \"Opened\" : \"Closed\" }}\r\n                </div>\r\n            </div>\r\n            <button class=\"badge badge-primary mr-2\" *ngIf=\"currentClass.status\" (click)=\"updateStatus(false)\">\r\n                Open\r\n              </button>\r\n            <button *ngIf=\"!currentClass.status\" class=\"badge badge-primary mr-2\" (click)=\"updateStatus(true)\">\r\n                Close\r\n              </button>\r\n\r\n            <button class=\"badge badge-danger mr-2\" (click)=\"deleteClasses()\">\r\n                Delete\r\n              </button>\r\n\r\n            <button type=\"submit\" class=\"badge badge-success\" (click)=\"updateClasses()\">\r\n                Update\r\n              </button>\r\n            <p>{{ message }}</p>\r\n\r\n\r\n            <div *ngIf=\"!currentClass\">\r\n                <br />\r\n                <p>Cannot access this Classes...</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- //// -->\r\n    <div class=\"col-md-6\">\r\n        <h4>Students List</h4>\r\n        <ul class=\"list-group\">\r\n            <li class=\"list-group-item\" *ngFor=\"let std of studentsList\">\r\n                {{ std.first_name }} {{ std.last_name }}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nexport class ClassesValidator {\r\n    static cannotContainSpace(control: AbstractControl) : ValidationErrors | null {\r\n        if((control.value as string).indexOf(' ') >= 0){\r\n            return {cannotContainSpace: true}\r\n        }\r\n  \r\n        return null;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ClassesService } from \"src/app/services/classes.service\";\r\n\r\n@Component({\r\n  selector: 'app-classes-list',\r\n  templateUrl: './classes-list.component.html',\r\n  styleUrls: ['./classes-list.component.css']\r\n})\r\nexport class ClassesListComponent implements OnInit {\r\n\r\n  classes: any;\r\n  currentClass = null;\r\n  currentIndex = -1;\r\n  name = '';\r\n\r\n\r\n  constructor(private classesService: ClassesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveClasses();\r\n  }\r\n  retrieveClasses() {\r\n    this.classesService.getAll()\r\n      .subscribe(\r\n        data => {\r\n          this.classes = data;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveClasses();\r\n    this.currentClass = null;\r\n    this.currentIndex = -1;\r\n  }\r\n\r\n  setActiveClasse(classe, index) {\r\n    this.currentClass = classe;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n}","<div class=\"list row\">\r\n    <div class=\"col-md-6\">\r\n        <h4>Classes List</h4>\r\n\r\n        <button class=\"m-3 btn btn-sm btn-danger\" routerLink=\"/add\">\r\n            Add Class\r\n          </button>\r\n        <ul class=\"list-group\">\r\n            <li class=\"list-group-item\" *ngFor=\"let Class of classes; let i = index\" [class.active]=\"i == currentIndex\" (click)=\"setActiveClasse(Class, i)\">\r\n                {{ Class.name }}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <div *ngIf=\"currentClass\">\r\n            <h4>Classes</h4>\r\n            <div>\r\n                <label><strong>code:</strong></label> {{ currentClass.code }}\r\n            </div>\r\n            <div>\r\n                <label><strong>name:</strong></label> {{ currentClass.name }}\r\n            </div>\r\n            <div>\r\n                <label><strong>Max students:</strong></label> {{ currentClass.max_students }}\r\n            </div>\r\n            <div>\r\n                <label><strong>Description:</strong></label> {{ currentClass.description }}\r\n            </div>\r\n            <div>\r\n                <label><strong>Status:</strong></label> {{ currentClass.status == 0 ? \"Opened\" : \"Closed\" }}\r\n            </div>\r\n\r\n            <a class=\"badge badge-warning\" href=\"/classes/{{ currentClass.id }}\">\r\n          view/edit\r\n        </a>\r\n        </div>\r\n\r\n        <div *ngIf=\"!currentClass\">\r\n            <br />\r\n            <p>Please click on a Class...</p>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from 'src/app/services/student.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-student-details',\r\n  templateUrl: './student-details.component.html',\r\n  styleUrls: ['./student-details.component.css'],\r\n})\r\nexport class StudentDetailsComponent implements OnInit {\r\n  currentStudent = null;\r\n  message = '';\r\n  constructor(\r\n    private studentService: StudentService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.message = '';\r\n    this.getStudent(this.route.snapshot.paramMap.get('id'));\r\n  }\r\n\r\n  getStudent(id) {\r\n    this.studentService.get(id)\r\n      .subscribe(\r\n        data => {\r\n          this.currentStudent = data;\r\n          console.log(data);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  updateStudent() {\r\n    this.studentService.update(this.currentStudent.id, this.currentStudent)\r\n      .subscribe(\r\n        response => {\r\n          console.log(response);\r\n          this.message = 'The student was updated successfully!';\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  deleteStudent() {\r\n    this.studentService.delete(this.currentStudent.id)\r\n      .subscribe(\r\n        response => {\r\n          console.log(response);\r\n          this.router.navigate(['/students']);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n}\r\n","<div *ngIf=\"currentStudent\" class=\"edit-form\">\r\n    <h4>Students</h4>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"first_name\">First Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"first_name\" [(ngModel)]=\"currentStudent.first_name\" name=\"first_name\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"last_name\">Last Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"last_name\" [(ngModel)]=\"currentStudent.last_name\" name=\"last_name\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"class\">CLASS</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"class\" [(ngModel)]=\"currentStudent.clase\" name=\"class\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"class\">Date of birth</label>\r\n            <input type=\"text\" ngbDatepicker [(ngModel)]=\"currentStudent.date_of_birth\" />\r\n\r\n            <!-- <input type=\"text\" class=\"form-control\" id=\"class\" [(ngModel)]=\"currentStudent.clase\" name=\"class\" /> -->\r\n        </div>\r\n    </form>\r\n\r\n\r\n    <button class=\"badge badge-danger mr-2\" (click)=\"deleteStudent()\">\r\n      Delete\r\n    </button>\r\n\r\n    <button type=\"submit\" class=\"badge badge-success\" (click)=\"updateStudent()\">\r\n      Update\r\n    </button>\r\n    <p>{{ message }}</p>\r\n</div>\r\n\r\n<div *ngIf=\"!currentStudent\">\r\n    <br />\r\n    <p>Cannot access this Student...</p>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from 'src/app/services/student.service';\r\n\r\n@Component({\r\n  selector: 'app-students-list',\r\n  templateUrl: './students-list.component.html',\r\n  styleUrls: ['./students-list.component.css'],\r\n})\r\nexport class StudentsListComponent implements OnInit {\r\n  students: any;\r\n  currentStudent = null;\r\n  currentIndex = -1;\r\n  first_name = '';\r\n\r\n  constructor(private studentService: StudentService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveStudents();\r\n  }\r\n  retrieveStudents() {\r\n    this.studentService.getAll()\r\n      .subscribe(\r\n        data => {\r\n          this.students = data;\r\n          console.log(data);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveStudents();\r\n    this.currentStudent = null;\r\n    this.currentIndex = -1;\r\n  }\r\n\r\n  setActiveStudent(tutorial, index) {\r\n    this.currentStudent = tutorial;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n}\r\n","<div class=\"list row\">\r\n    <div class=\"col-md-6\">\r\n        <h4>Students List</h4>\r\n\r\n        <button class=\"m-3 btn btn-sm btn-danger\" href=\"create\">\r\n            Add Student\r\n          </button>\r\n        <ul class=\"list-group\">\r\n            <li class=\"list-group-item\" *ngFor=\"let std of students; let i = index\" [class.active]=\"i == currentIndex\" (click)=\"setActiveStudent(std, i)\">\r\n                {{ std.first_name }}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <div *ngIf=\"currentStudent\">\r\n            <h4>Students</h4>\r\n            <div>\r\n                <label><strong>First Name:</strong></label> {{ currentStudent.first_name }}\r\n            </div>\r\n            <div>\r\n                <label><strong>Last Name:</strong></label> {{ currentStudent.last_name }}\r\n            </div>\r\n            <div>\r\n                <label><strong>Class:</strong></label> {{ currentStudent.class }}\r\n            </div>\r\n            <div>\r\n                <label><strong>Date of birth:</strong></label> {{ currentStudent.date_of_birth }}\r\n            </div>\r\n            <a class=\"badge badge-warning\" href=\"/Students/{{ currentStudent.id }}\">\r\n          Edit\r\n        </a>\r\n        </div>\r\n\r\n        <div *ngIf=\"!currentStudent\">\r\n            <br />\r\n            <p>Please click on a Student...</p>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst baseUrl = 'http://ec2-18-191-226-104.us-east-2.compute.amazonaws.com/api/classes';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ClassesService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll() {\r\n    return this.http.get(baseUrl);\r\n  }\r\n\r\n  get(id) {\r\n    return this.http.get(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return this.http.post(baseUrl, data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return this.http.put(`${baseUrl}/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return this.http.delete(`${baseUrl}/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst baseUrl = 'http://ec2-18-191-226-104.us-east-2.compute.amazonaws.com/api/students/';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StudentService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll() {\r\n    return this.http.get(baseUrl);\r\n  }\r\n\r\n  get(id) {\r\n    return this.http.get(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return this.http.post(baseUrl, data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return this.http.put(`${baseUrl}/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return this.http.delete(`${baseUrl}/${id}`);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}