{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-classes/add-classes.component.ts","webpack:///src/app/components/add-classes/add-classes.component.html","webpack:///src/app/components/add-classes/classes.validator.ts","webpack:///src/app/components/add-student/add-student.component.ts","webpack:///src/app/components/add-student/add-student.component.html","webpack:///src/app/components/classes-details/classes-details.component.ts","webpack:///src/app/components/classes-details/classes-details.component.html","webpack:///src/app/components/classes-details/classes.validator.ts","webpack:///src/app/components/classes-list/classes-list.component.ts","webpack:///src/app/components/classes-list/classes-list.component.html","webpack:///src/app/components/student-details/student-details.component.ts","webpack:///src/app/components/student-details/student-details.component.html","webpack:///src/app/components/students-list/students-list.component.ts","webpack:///src/app/components/students-list/students-list.component.html","webpack:///src/app/services/classes.service.ts","webpack:///src/app/services/student.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AddClassesComponent","classesService","form","required","cannotContainSpace","name","status","max_students","classes","description","submitted","console","log","value","saveClasses","data","create","subscribe","response","error","controls","ClassesValidator","control","indexOf","AddStudentComponent","studentService","calendar","student","first_name","last_name","date_of_birth","Date","isDisabled","date","current","month","isWeekend","getWeekday","ClassesDetailsComponent","route","router","currentClass","studentsList","message","getClasses","snapshot","paramMap","get","updateClasses","Status","update","navigate","deleteClasses","ClassesListComponent","currentIndex","retrieveClasses","getAll","classe","index","StudentDetailsComponent","currentStudent","getStudent","StudentsListComponent","retrieveStudents","students","tutorial","baseUrl","ClassesService","http","post","put","providedIn","StudentService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ClassesListComponent } from './components/classes-list/classes-list.component';\r\nimport { ClassesDetailsComponent } from './components/classes-details/classes-details.component';\r\nimport { AddClassesComponent } from './components/add-classes/add-classes.component';\r\nimport { StudentsListComponent } from './components/students-list/students-list.component';\r\nimport { StudentDetailsComponent } from './components/student-details/student-details.component';\r\nimport { AddStudentComponent } from './components/add-student/add-student.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'classes', redirectTo: 'classes', pathMatch: 'full' },\r\n  { path: 'classes', component: ClassesListComponent },\r\n  { path: 'classes/:id', component: ClassesDetailsComponent },\r\n  { path: 'add', component: AddClassesComponent },\r\n\r\n  { path: 'students', redirectTo: 'students', pathMatch: 'full' },\r\n  { path: 'students', component: StudentsListComponent },\r\n  { path: 'students/:id', component: StudentDetailsComponent },\r\n  { path: 'add', component: AddStudentComponent }\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'TaskOne';\r\n}\r\n","<div>\r\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <a href=\"#\" class=\"navbar-brand\">TASK #1</a>\r\n        <div class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item\">\r\n                <a routerLink=\"classes\" class=\"nav-link\">CLASSES</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a routerLink=\"students\" class=\"nav-link\">STUDENTS</a>\r\n            </li>\r\n        </div>\r\n    </nav>\r\n\r\n    <div class=\"container mt-3\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AddClassesComponent } from './components/add-classes/add-classes.component';\r\nimport { ClassesDetailsComponent } from './components/classes-details/classes-details.component';\r\nimport { ClassesListComponent } from './components/classes-list/classes-list.component';\r\n\r\nimport { AddStudentComponent } from './components/add-student/add-student.component';\r\nimport { StudentDetailsComponent } from './components/student-details/student-details.component';\r\nimport { StudentsListComponent } from './components/students-list/students-list.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddClassesComponent,\r\n    ClassesDetailsComponent,\r\n    ClassesListComponent,\r\n    AddStudentComponent,\r\n    StudentDetailsComponent,\r\n    StudentsListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\r\nimport { ClassesValidator } from './classes.validator';\r\n\r\nimport { ClassesService } from 'src/app/services/classes.service';\r\n\r\n@Component({\r\n  selector: 'app-add-classes',\r\n  templateUrl: './add-classes.component.html',\r\n  styleUrls: ['./add-classes.component.css'],\r\n})\r\nexport class AddClassesComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n    code: new FormControl('', [Validators.required, ClassesValidator.cannotContainSpace]),\r\n    name: new FormControl('', Validators.required),\r\n    status: new FormControl('', Validators.required),\r\n    max_students: new FormControl('', Validators.required)\r\n    \r\n  });\r\n\r\n\r\n  classes = {\r\n    code: '',\r\n    name: '',\r\n    max_students: '',\r\n    status: '',\r\n    description: '',\r\n  };\r\n  submitted = false;\r\n\r\n  constructor(private classesService: ClassesService) {}\r\n\r\n  get f(){\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit(){\r\n    console.log(this.form.value);\r\n\r\n    this.saveClasses();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n  \r\n\r\n  saveClasses() {\r\n    const data = {\r\n      code: this.classes.code,\r\n      name: this.classes.name,\r\n      max_students: this.classes.max_students,\r\n      status: this.classes.status,\r\n      description: this.classes.description,\r\n    };\r\n\r\n    this.classesService.create(data).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.submitted = true;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  newClasses() {\r\n    this.submitted = false;\r\n    this.classes = {\r\n      code: '',\r\n      name: '',\r\n      max_students: '',\r\n      status: '',\r\n      description: '',\r\n    };\r\n  }\r\n}\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"saveClasses()\" class=\"submit-form\">\r\n    <div *ngIf=\"!submitted\">\r\n        <div class=\"form-group\">\r\n            <label for=\"code\">Code</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"code\" pattern=\"^\\S+$\" required [(ngModel)]=\"classes.code\" formControlName=\"code\" />\r\n            <div *ngIf=\"f.code.touched && f.code.invalid\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"f.code.errors.required\">code is required.</div>\r\n                <div *ngIf=\"f.code.errors.minlength\">code should be 3 character.</div>\r\n                <div *ngIf=\"f.code.errors.cannotContainSpace\">code can not contain space.</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"name\">Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"classes.name\" formControlName=\"name\" />\r\n            <div *ngIf=\"f.name.touched && f.name.invalid\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"f.name.errors.required\">name is required.</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"max_students\">Max Students</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"max_students\" required [(ngModel)]=\"classes.max_students\" formControlName=\"max_students\" />\r\n            <div *ngIf=\"f.max_students.touched && f.max_students.invalid\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"f.max_students.errors.required\">Maximum Students is required.</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"status\">status</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"status\" required [(ngModel)]=\"classes.status\" formControlName=\"status\" />\r\n            <div *ngIf=\"f.status.touched && f.status.invalid\" class=\"alert alert-danger\">\r\n                <div *ngIf=\"f.status.errors.required\">status is required.</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"description\">Description</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"description\" [(ngModel)]=\"classes.description\" [ngModelOptions]=\"{standalone: true}\" name=\" description \" />\r\n\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-success \" [disabled]=\"!(form.valid)\">Submit</button>\r\n    </div>\r\n\r\n    <div *ngIf=\"submitted \">\r\n        <h4>You submitted successfully!</h4>\r\n        <button class=\"btn btn-success \" (click)=\"newClasses() \">Add</button>\r\n    </div>\r\n</form>","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nexport class ClassesValidator {\r\n    static cannotContainSpace(control: AbstractControl) : ValidationErrors | null {\r\n        if((control.value as string).indexOf(' ') >= 0){\r\n            return {cannotContainSpace: true}\r\n        }\r\n  \r\n        return null;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from 'src/app/services/student.service';\r\n\r\nimport {NgbCalendar, NgbDate, NgbDateStruct} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-add-student',\r\n  templateUrl: './add-student.component.html',\r\n  styleUrls: ['./add-student.component.css'],\r\n})\r\nexport class AddStudentComponent implements OnInit {\r\n  model: NgbDateStruct;\r\n\r\n  student = {\r\n    first_name: '',\r\n    last_name: '',\r\n    class: '',\r\n    date_of_birth: Date,\r\n  };\r\n  submitted = false;\r\n  constructor(private studentService: StudentService,private calendar: NgbCalendar) {}\r\n  isDisabled = (date: NgbDate, current: {month: number, year: number}) => date.month !== current.month;\r\n  isWeekend = (date: NgbDate) =>  this.calendar.getWeekday(date) >= 6;\r\n\r\n\r\n  ngOnInit(): void {}\r\n\r\n  saveStudent() {\r\n    const data = {\r\n      first_name: this.student.first_name,\r\n      last_name: this.student.last_name,\r\n      class: this.student.class,\r\n      date_of_birth: this.student.date_of_birth,\r\n    };\r\n\r\n    this.studentService.create(data).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.submitted = true;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  newStudent() {\r\n    this.submitted = false;\r\n    this.student = {\r\n      first_name: '',\r\n      last_name: '',\r\n      class: '',\r\n      date_of_birth: Date,\r\n    };\r\n  }\r\n}\r\n","<div class=\"submit-form\">\r\n    <div *ngIf=\"!submitted\">\r\n        <div class=\"form-group\">\r\n            <label for=\"First_Name\">First Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"First_Name\" required [(ngModel)]=\"student.first_name \" name=\"First_Name\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"Last_Name\">Last Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"Last_Name\" required [(ngModel)]=\"student.last_name \" name=\"Last_Name\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"class\">class</label>\r\n            <input class=\"form-control\" id=\"class\" required [(ngModel)]=\"student.class\" name=\"class\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"date_of_birth\">Date of Birth</label>\r\n            <!-- <input class=\"form-control\" id=\"date_of_birth\" required [(ngModel)]=\"student.date_of_birth\" name=\"date_of_birth\" /> -->\r\n            <div class=\"input-group\">\r\n                <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"student.date_of_birth\" ngbDatepicker #d=\"ngbDatepicker\">\r\n                <div class=\"input-group-append\">\r\n                    <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"></button>\r\n                </div>\r\n            </div>\r\n\r\n            <button (click)=\"saveStudent()\" class=\"btn btn-success\">Submit</button>\r\n        </div>\r\n\r\n        <div *ngIf=\"submitted\">\r\n            <h4>You submitted successfully!</h4>\r\n            <button class=\"btn btn-success\" (click)=\"newStudent()\">Add</button>\r\n        </div>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ClassesValidator } from './classes.validator';\r\n\r\nimport { ClassesService } from 'src/app/services/classes.service';\r\n\r\n@Component({\r\n  selector: 'app-classes-details',\r\n  templateUrl: './classes-details.component.html',\r\n  styleUrls: ['./classes-details.component.css'],\r\n})\r\nexport class ClassesDetailsComponent implements OnInit {\r\n  currentClass = null;\r\n  studentsList = null;\r\n  message = '';\r\n\r\n  form = new FormGroup({\r\n    code: new FormControl('', [\r\n      Validators.required,\r\n      ClassesValidator.cannotContainSpace,\r\n    ]),\r\n    name: new FormControl('', Validators.required),\r\n    max_students: new FormControl('', Validators.required)\r\n  });\r\n  constructor(\r\n    private classesService: ClassesService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.message = '';\r\n    this.getClasses(this.route.snapshot.paramMap.get('id'));\r\n  }\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  submit() {\r\n    console.log(this.form.value);\r\n    this.updateClasses();\r\n  }\r\n\r\n  getClasses(id) {\r\n    this.classesService.get(id).subscribe(\r\n      (data) => {\r\n        this.currentClass = data['class'];\r\n        this.studentsList = data['students'];\r\n        console.log('students',data);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  updateStatus(status) {\r\n    const data = {\r\n      code: this.currentClass.code,\r\n      name: this.currentClass.name,\r\n      max_students: this.currentClass.max_students,\r\n      description: this.currentClass.description,\r\n      Status: status,\r\n    };\r\n\r\n    this.classesService.update(this.currentClass.id, data).subscribe(\r\n      (response) => {\r\n        this.currentClass.status = status;\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  updateClasses() {\r\n    this.classesService\r\n      .update(this.currentClass.id, this.currentClass)\r\n      .subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n          this.message = 'The Classes was updated successfully!';\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  deleteClasses() {\r\n    this.classesService.delete(this.currentClass.id).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.router.navigate(['/classes']);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"list row\">\r\n\r\n    <div class=\"col-md-6\">\r\n        <div [formGroup]=\"form\" class=\"submit-form\">\r\n            <div *ngIf=\"currentClass\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"code\">Code</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"code\" pattern=\"^\\S+$\" required [(ngModel)]=\"currentClass.code\" formControlName=\"code\" />\r\n                    <div *ngIf=\"f.code.touched && f.code.invalid\" class=\"alert alert-danger\">\r\n                        <div *ngIf=\"f.code.errors.required\">code is required.</div>\r\n                        <div *ngIf=\"f.code.errors.minlength\">code should be 3 character.</div>\r\n                        <div *ngIf=\"f.code.errors.cannotContainSpace\">code can not contain space.</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"name\">Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"currentClass.name\" formControlName=\"name\" />\r\n                    <div *ngIf=\"f.name.touched && f.name.invalid\" class=\"alert alert-danger\">\r\n                        <div *ngIf=\"f.name.errors.required\">name is required.</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"max_students\">Max Students</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"max_students\" required [(ngModel)]=\"currentClass.max_students\" formControlName=\"max_students\" />\r\n                    <div *ngIf=\"f.max_students.touched && f.max_students.invalid\" class=\"alert alert-danger\">\r\n                        <div *ngIf=\"f.max_students.errors.required\">Maximum Students is required.</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"description\">Description</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"description\" [(ngModel)]=\"currentClass.description\" [ngModelOptions]=\"{standalone: true}\" name=\" description \" />\r\n\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label><strong>Status:</strong></label> {{ currentClass.status == 0 ? \"Opened\" : \"Closed\" }}\r\n                </div>\r\n            </div>\r\n            <button class=\"badge badge-primary mr-2\" *ngIf=\"currentClass.status\" (click)=\"updateStatus(false)\">\r\n                Open\r\n              </button>\r\n            <button *ngIf=\"!currentClass.status\" class=\"badge badge-primary mr-2\" (click)=\"updateStatus(true)\">\r\n                Close\r\n              </button>\r\n\r\n            <button class=\"badge badge-danger mr-2\" (click)=\"deleteClasses()\">\r\n                Delete\r\n              </button>\r\n\r\n            <button type=\"submit\" class=\"badge badge-success\" (click)=\"updateClasses()\">\r\n                Update\r\n              </button>\r\n            <p>{{ message }}</p>\r\n\r\n\r\n            <div *ngIf=\"!currentClass\">\r\n                <br />\r\n                <p>Cannot access this Classes...</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- //// -->\r\n    <div class=\"col-md-6\">\r\n        <h4>Students List</h4>\r\n        <ul class=\"list-group\">\r\n            <li class=\"list-group-item\" *ngFor=\"let std of studentsList\">\r\n                {{ std.first_name }} {{ std.last_name }}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nexport class ClassesValidator {\r\n    static cannotContainSpace(control: AbstractControl) : ValidationErrors | null {\r\n        if((control.value as string).indexOf(' ') >= 0){\r\n            return {cannotContainSpace: true}\r\n        }\r\n  \r\n        return null;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ClassesService } from \"src/app/services/classes.service\";\r\n\r\n@Component({\r\n  selector: 'app-classes-list',\r\n  templateUrl: './classes-list.component.html',\r\n  styleUrls: ['./classes-list.component.css']\r\n})\r\nexport class ClassesListComponent implements OnInit {\r\n\r\n  classes: any;\r\n  currentClass = null;\r\n  currentIndex = -1;\r\n  name = '';\r\n\r\n\r\n  constructor(private classesService: ClassesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveClasses();\r\n  }\r\n  retrieveClasses() {\r\n    this.classesService.getAll()\r\n      .subscribe(\r\n        data => {\r\n          this.classes = data;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveClasses();\r\n    this.currentClass = null;\r\n    this.currentIndex = -1;\r\n  }\r\n\r\n  setActiveClasse(classe, index) {\r\n    this.currentClass = classe;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n}","<div class=\"list row\">\r\n    <div class=\"col-md-6\">\r\n        <h4>Classes List</h4>\r\n\r\n        <button class=\"m-3 btn btn-sm btn-danger\" routerLink=\"/add\">\r\n            Add Class\r\n          </button>\r\n        <ul class=\"list-group\">\r\n            <li class=\"list-group-item\" *ngFor=\"let Class of classes; let i = index\" [class.active]=\"i == currentIndex\" (click)=\"setActiveClasse(Class, i)\">\r\n                {{ Class.name }}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <div *ngIf=\"currentClass\">\r\n            <h4>Classes</h4>\r\n            <div>\r\n                <label><strong>code:</strong></label> {{ currentClass.code }}\r\n            </div>\r\n            <div>\r\n                <label><strong>name:</strong></label> {{ currentClass.name }}\r\n            </div>\r\n            <div>\r\n                <label><strong>Max students:</strong></label> {{ currentClass.max_students }}\r\n            </div>\r\n            <div>\r\n                <label><strong>Description:</strong></label> {{ currentClass.description }}\r\n            </div>\r\n            <div>\r\n                <label><strong>Status:</strong></label> {{ currentClass.status == 0 ? \"Opened\" : \"Closed\" }}\r\n            </div>\r\n\r\n            <a class=\"badge badge-warning\" href=\"/classes/{{ currentClass.id }}\">\r\n          view/edit\r\n        </a>\r\n        </div>\r\n\r\n        <div *ngIf=\"!currentClass\">\r\n            <br />\r\n            <p>Please click on a Class...</p>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from 'src/app/services/student.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-student-details',\r\n  templateUrl: './student-details.component.html',\r\n  styleUrls: ['./student-details.component.css'],\r\n})\r\nexport class StudentDetailsComponent implements OnInit {\r\n  currentStudent = null;\r\n  message = '';\r\n  constructor(\r\n    private studentService: StudentService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.message = '';\r\n    this.getStudent(this.route.snapshot.paramMap.get('id'));\r\n  }\r\n\r\n  getStudent(id) {\r\n    this.studentService.get(id)\r\n      .subscribe(\r\n        data => {\r\n          this.currentStudent = data;\r\n          console.log(data);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  updateStudent() {\r\n    this.studentService.update(this.currentStudent.id, this.currentStudent)\r\n      .subscribe(\r\n        response => {\r\n          console.log(response);\r\n          this.message = 'The student was updated successfully!';\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  deleteStudent() {\r\n    this.studentService.delete(this.currentStudent.id)\r\n      .subscribe(\r\n        response => {\r\n          console.log(response);\r\n          this.router.navigate(['/students']);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n}\r\n","<div *ngIf=\"currentStudent\" class=\"edit-form\">\r\n    <h4>Students</h4>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"first_name\">First Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"first_name\" [(ngModel)]=\"currentStudent.first_name\" name=\"first_name\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"last_name\">Last Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"last_name\" [(ngModel)]=\"currentStudent.last_name\" name=\"last_name\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"class\">CLASS</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"class\" [(ngModel)]=\"currentStudent.clase\" name=\"class\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"class\">Date of birth</label>\r\n            <input type=\"text\" ngbDatepicker [(ngModel)]=\"currentStudent.date_of_birth\" />\r\n\r\n            <!-- <input type=\"text\" class=\"form-control\" id=\"class\" [(ngModel)]=\"currentStudent.clase\" name=\"class\" /> -->\r\n        </div>\r\n    </form>\r\n\r\n\r\n    <button class=\"badge badge-danger mr-2\" (click)=\"deleteStudent()\">\r\n      Delete\r\n    </button>\r\n\r\n    <button type=\"submit\" class=\"badge badge-success\" (click)=\"updateStudent()\">\r\n      Update\r\n    </button>\r\n    <p>{{ message }}</p>\r\n</div>\r\n\r\n<div *ngIf=\"!currentStudent\">\r\n    <br />\r\n    <p>Cannot access this Student...</p>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from 'src/app/services/student.service';\r\n\r\n@Component({\r\n  selector: 'app-students-list',\r\n  templateUrl: './students-list.component.html',\r\n  styleUrls: ['./students-list.component.css'],\r\n})\r\nexport class StudentsListComponent implements OnInit {\r\n  students: any;\r\n  currentStudent = null;\r\n  currentIndex = -1;\r\n  first_name = '';\r\n\r\n  constructor(private studentService: StudentService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveStudents();\r\n  }\r\n  retrieveStudents() {\r\n    this.studentService.getAll()\r\n      .subscribe(\r\n        data => {\r\n          this.students = data;\r\n          console.log(data);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveStudents();\r\n    this.currentStudent = null;\r\n    this.currentIndex = -1;\r\n  }\r\n\r\n  setActiveStudent(tutorial, index) {\r\n    this.currentStudent = tutorial;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n}\r\n","<div class=\"list row\">\r\n    <div class=\"col-md-6\">\r\n        <h4>Students List</h4>\r\n\r\n        <button class=\"m-3 btn btn-sm btn-danger\" href=\"create\">\r\n            Add Student\r\n          </button>\r\n        <ul class=\"list-group\">\r\n            <li class=\"list-group-item\" *ngFor=\"let std of students; let i = index\" [class.active]=\"i == currentIndex\" (click)=\"setActiveStudent(std, i)\">\r\n                {{ std.first_name }}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <div *ngIf=\"currentStudent\">\r\n            <h4>Students</h4>\r\n            <div>\r\n                <label><strong>First Name:</strong></label> {{ currentStudent.first_name }}\r\n            </div>\r\n            <div>\r\n                <label><strong>Last Name:</strong></label> {{ currentStudent.last_name }}\r\n            </div>\r\n            <div>\r\n                <label><strong>Class:</strong></label> {{ currentStudent.class }}\r\n            </div>\r\n            <div>\r\n                <label><strong>Date of birth:</strong></label> {{ currentStudent.date_of_birth }}\r\n            </div>\r\n            <a class=\"badge badge-warning\" href=\"/Students/{{ currentStudent.id }}\">\r\n          Edit\r\n        </a>\r\n        </div>\r\n\r\n        <div *ngIf=\"!currentStudent\">\r\n            <br />\r\n            <p>Please click on a Student...</p>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst baseUrl = 'http://ec2-18-191-226-104.us-east-2.compute.amazonaws.com/api/classes';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ClassesService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll() {\r\n    return this.http.get(baseUrl);\r\n  }\r\n\r\n  get(id) {\r\n    return this.http.get(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return this.http.post(baseUrl, data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return this.http.put(`${baseUrl}/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return this.http.delete(`${baseUrl}/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst baseUrl = 'http://ec2-18-191-226-104.us-east-2.compute.amazonaws.com/api/students/';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StudentService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll() {\r\n    return this.http.get(baseUrl);\r\n  }\r\n\r\n  get(id) {\r\n    return this.http.get(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return this.http.post(baseUrl, data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return this.http.put(`${baseUrl}/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return this.http.delete(`${baseUrl}/${id}`);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}